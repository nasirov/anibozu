<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.2.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>nasirov.yv</groupId>
  <artifactId>anime-checker</artifactId>
  <version>1.0</version>
  <name>anime-checker</name>
  <description>Analyzes user anime list from myanimelist.net and searches for new episodes on animedia.tv
  </description>
  <packaging>jar</packaging>

  <properties>
    <java.version>1.8</java.version>
    <jersey-bundle>1.19.4</jersey-bundle>
    <jersey-json>1.19.4</jersey-json>
    <dec>0.1.2</dec>
    <docker-maven-version>0.31.0</docker-maven-version>
    <org.jacoco>0.8.3</org.jacoco>
    <org.sonarsource.scanner.maven>3.6.0.1398</org.sonarsource.scanner.maven>
    <org.eluder.coveralls>4.3.0</org.eluder.coveralls>
    <jersey2.version>2.27</jersey2.version>
    <wiremock-jre8>2.22.0</wiremock-jre8>
    <jbrotli>0.5.0</jbrotli>
    <argLine>-Dfile.encoding=UTF-8</argLine>
    <docker.buildArg.JAR_FILE>target/${project.build.finalName}.jar</docker.buildArg.JAR_FILE>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-freemarker</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jersey</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-bundle</artifactId>
      <version>${jersey-bundle}</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.test-framework.providers</groupId>
      <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
      <version>${jersey2.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>${jersey-json}</version>
    </dependency>

    <dependency>
      <groupId>org.brotli</groupId>
      <artifactId>dec</artifactId>
      <version>${dec}</version>
    </dependency>

    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8</artifactId>
      <version>${wiremock-jre8}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.meteogroup.jbrotli</groupId>
      <artifactId>jbrotli</artifactId>
      <version>${jbrotli}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>bintray-nitram509-jbrotli</id>
      <name>bintray</name>
      <url>http://dl.bintray.com/nitram509/jbrotli</url>
    </repository>
  </repositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-version}</version>
        <configuration>
          <images>
            <image>
              <alias>heroku</alias>
              <name>registry.heroku.com/anime-checker/web</name>
              <build>
                <contextDir>${project.basedir}</contextDir>
              </build>
            </image>
            <image>
              <alias>docker</alias>
              <name>nasirov/anime-checker</name>
              <build>
                <contextDir>${project.basedir}</contextDir>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${org.jacoco}</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>**/data/**</exclude>
            <exclude>**/parameter/**</exclude>
            <exclude>**/exception/**</exclude>
            <exclude>**/configuration/**</exclude>
            <exclude>**/client/**</exclude>
            <exclude>**/properties/**</exclude>
            <exclude>**/AnimeCheckerApplication</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${org.sonarsource.scanner.maven}</version>
      </plugin>

      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>${org.eluder.coveralls}</version>
      </plugin>

    </plugins>
  </build>

</project>
