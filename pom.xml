<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>nasirov.yv</groupId>
    <artifactId>fandub-service-parent</artifactId>
    <version>1.0.0</version>
    <relativePath/>
  </parent>

  <artifactId>anime-checker</artifactId>
  <version>3.7.4</version>
  <name>anime-checker</name>
  <description>The application analyzes a user watching titles list from MyAnimeList(https://myanimelist.net/) and searches for new episodes on
    FanDub Sites
  </description>
  <packaging>jar</packaging>

  <properties>
    <docker.buildArg.JAR_FILE>target/${project.build.finalName}.jar</docker.buildArg.JAR_FILE>
    <fandub-service-spring-boot-starter.version>17.0.0</fandub-service-spring-boot-starter.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>nasirov.yv</groupId>
      <artifactId>fandub-service-spring-boot-starter</artifactId>
      <version>${fandub-service-spring-boot-starter.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-web</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-freemarker</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>

    <dependency>
      <groupId>org.ehcache</groupId>
      <artifactId>ehcache</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.cache</groupId>
      <artifactId>cache-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <repositories>

    <repository>
      <id>fandub-service-parent</id>
      <name>GitHub nasirov/fandub-service-parent Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/nasirov/fandub-service-parent</url>
      <releases>
        <updatePolicy>always</updatePolicy>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <updatePolicy>always</updatePolicy>
        <enabled>true</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>fandub-service-spring-boot-starter</id>
      <name>GitHub nasirov/fandub-service-spring-boot-starter Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/nasirov/fandub-service-spring-boot-starter</url>
      <releases>
        <updatePolicy>always</updatePolicy>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <updatePolicy>always</updatePolicy>
        <enabled>true</enabled>
      </snapshots>
    </repository>

  </repositories>

  <build>

    <plugins>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <images>
            <image>
              <alias>heroku</alias>
              <name>registry.heroku.com/anime-checker/web</name>
              <build>
                <contextDir>${project.basedir}</contextDir>
              </build>
            </image>
            <image>
              <alias>docker</alias>
              <name>nasirov/anime-checker</name>
              <build>
                <contextDir>${project.basedir}</contextDir>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${org.jacoco}</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>**/configuration/**</exclude>
            <exclude>**/data/**</exclude>
            <exclude>**/exception/**</exclude>
            <exclude>**/AnimeCheckerApplication**</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
      </plugin>

    </plugins>

  </build>

</project>
