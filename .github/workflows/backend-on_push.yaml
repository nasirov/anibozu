name: "Backend"

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/backend-on_push.yaml'
      - 'helm/**'
      - 'src/**'
      - 'pom.xml'

env:
  SERVER_USERNAME: ${{ secrets.USERNAME }}
  SERVER_PASSWORD: ${{ secrets.TOKEN }}
  PROJECT: anibozu
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
  SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
  SONAR_PROJECTKEY: ${{ secrets.SONAR_PROJECTKEY }}

jobs:

  helm:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate helm chart
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBECTL_CONFIG }}
        with:
          args: helm lint helm

  tests:
    runs-on: ubuntu-latest
    needs: helm
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
          server-id: fandub-microservices
          server-username: SERVER_USERNAME
          server-password: SERVER_PASSWORD

      - name: Cache maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ hashFiles('**/pom.xml') }}

      - name: Tests and Sonar
        run: |
          skip_tests_message="[microservices] set parent version"
          current_commit_message=$(git log -1 --pretty=format:%s)
          
          if [[ "${skip_tests_message}" == "${current_commit_message}" ]]; then
              echo "Tests have been run during [EVENT] microservice-parent-released"
              echo "Will skip tests and push to Sonar"
          else
              echo "Regular commit, will run tests and push to Sonar"
              mvn clean package && mvn sonar:sonar -Dsonar.host.url=${{ env.SONAR_HOST_URL }} -Dsonar.projectKey=${{ env.SONAR_PROJECTKEY }} \
              -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} -Dsonar.login=${{ env.SONAR_LOGIN }}
          fi

  docker:
    runs-on: ubuntu-latest
    needs: tests
    outputs:
      image-tag: ${{ steps.build-and-push-image.outputs.image-tag }}
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
          server-id: fandub-microservices
          server-username: SERVER_USERNAME
          server-password: SERVER_PASSWORD

      - name: Cache maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ hashFiles('**/pom.xml') }}


      - name: Build and Push image
        id: build-and-push-image
        env:
          CONTAINER_REGISTRY_USER: ${{ secrets.CONTAINER_REGISTRY_USER }}
          CONTAINER_REGISTRY_PASS: ${{ secrets.CONTAINER_REGISTRY_PASS }}
          GITHUB_ACCESS_TOKEN: ${{ secrets.TOKEN }}
        run: |
          app_name=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)
          registry_path=$(mvn help:evaluate -Dexpression=registry-path -q -DforceStdout)
          commit_hash=$(git rev-parse --short HEAD)
          echo "image-tag=${commit_hash}" >> $GITHUB_OUTPUT

          mvn clean compile jib:build -Djib.to.image="${registry_path}/${app_name}:${commit_hash}"

  k8s:
    runs-on: ubuntu-latest
    needs: docker
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy to k8s
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBECTL_CONFIG }}
        with:
          args: helm upgrade --install --set image.tag=${{ needs.docker.outputs.image-tag }} ${{ env.PROJECT }} helm